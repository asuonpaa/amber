#!amber

SHADER vertex vertex_shader PASSTHROUGH

SHADER fragment fragment_shader GLSL
#version 310 es

precision highp float;

layout(set = 0, binding = 0) uniform sampler2D puppySampler;

layout(location = 0) out vec4 color;

void main() {
  color = texture(puppySampler, gl_FragCoord.xy / 256.0);
}
END

BYTE_BUFFER puppy_buffer SIZE_BYTES 512*512*4 IMAGE_FILE puppy.png
IMAGE puppy_image FORMAT R8G8B8A8_UNORM DIM_2D WIDTH 512 HEIGHT 512 BUFFERS puppy_buffer 

BYTE_BUFFER framebuffer SIZE_BYTES 256*256*4 FILL 0
IMAGE framebuffer_image FORMAT B8G8R8A8_UNORM DIM_2D WIDTH 256 HEIGHT 256 BUFFERS framebuffer

SAMPLER the_sampler

PIPELINE graphics puppy_pipeline
  ATTACH vertex_shader
  ATTACH fragment_shader
  BIND IMAGE framebuffer_image AS color LOCATION 0
  BIND IMAGE puppy_image AS combined_image_sampler SAMPLER the_sampler DESCRIPTOR_SET 0 BINDING 0
END

CLEAR_COLOR puppy_pipeline 0 0 0 255

CLEAR puppy_pipeline
RUN puppy_pipeline DRAW_RECT POS 0 0 SIZE 256 256
